import PySimpleGUI as sgimport jsonfrom sopa import sopadef jugar():    """La funcion carga la configuracion.json para permitir al usuario jugar a la sopa de letras."""    #Archivo Json    with open('configuracion.json', encoding='utf-8') as f:     data = json.load(f)    #Se llama a la funcion sopa() para cargar el layout que contiene a la sopa, un diccionario de palabras con su color dependiente su tipo(sust,adj o verb) y las coordenadas de cada letra    #y una lista con las coordenadas de los espacios con letras randoms    retorno = sopa()    layout = retorno[0]    palabras = retorno[1]    letras = retorno[2]    print(retorno)    #variables con el ancho y la altura de la caja que contiene cada letra    #esto me va a ayudar a hacer responsivo el tamaño de la ventana    ancho = 7    altura = 2    dimensiones_caja_letra = (ancho, altura)    print(data['ayuda'])    ayuda = [              [sg.T('')],              [sg.Button('Pedir Ayuda!', key='help')],              [sg.Listbox(values=[], font='Courier', size=(10,7), key='lista_pal', visible=data['ayuda'][0] == 'si')]            ]    tipos_de_palabras = [                          [sg.T('')],                          [sg.Text(" Sustantivos "+str(len(data["sustantivos"])),text_color='black'),                            sg.T(                              "",                              size=(1,1),                              background_color=str(data["colores"]["Sustantivos"])),                            sg.Radio('', "RADIO1",key="rad_sust",size=(10,1),text_color="black",default=True)],                           [sg.Text(" Verbos "+str(len(data["verbos"])),text_color='black'),                            sg.T(                              "",                              size=(1,1),                              background_color=data["colores"]["Verbos"],                              ),                            sg.Radio('', "RADIO1",key="rad_verb",size=(10,1),text_color="black"),                           ],                           [sg.Text(" Adjetivos "+str(len(data["adjetivos"])),text_color='black'),                            sg.T(                              "",                              size=(1,1),                              background_color=data["colores"]["Adjetivos"],                              ),                            sg.Radio('', "RADIO1",key="rad_adj",size=(10,1),text_color="black")],                            [sg.T('')],                            [sg.Submit("¿Completé correctamente todo?", key='revisar')],                             [sg.Button('Volver a Inicio', key='volver')]                        ]    #tabla contiene  datos que ayudaran al usuario como:cantidad de sustantivos,adjetivos y verbos. Ademas el color seleccionado para pintar cada letra en la sopa    tabla=[               [sg.Column(tipos_de_palabras), sg.Column(ayuda)]             ]           #Agrego la tabla al layout    layout.extend(tabla)    window_sopa = sg.Window('Sopa de letras',              size=(ancho * 100, 450),               grab_anywhere=True,               font='Courier',               auto_size_text=True,              text_justification='center',              no_titlebar=True).Layout(layout)    #Diccionario con las coordenadas como clave y el color como dato    resolucion = {}    #Cargo el diccionario con al resolucion a la sopa de letras para compararlo con el diccionario progreso.    for palabra in list(palabras.keys()):     for coordenada in palabras[palabra]["coord"]:       resolucion[coordenada]=palabras[palabra]["color"]    progreso = {}    while True:     try:      evento, values = window_sopa.Read()      if evento=="revisar":       try:        if progreso==resolucion:         seguir = sg.PopupYesNo("FELICITACIONES, haz ganado! Deseas jugar otra vez?", font='Courier')          if seguir == 'Yes':          jugar()          break         else:          break          else:         sg.Popup("Oops! Revisá los errores y seguí intentándolo.", font='Courier')       except:        sg.Popup("Oops! Revisá los errores y seguí intentándolo.", font='Courier')      elif evento == 'help':        if data['ayuda'][0] == 'si':          window_sopa.FindElement('lista_pal').Update(values=data['palabras'])      elif evento == 'volver':        break      elif evento in progreso:        progreso.pop(evento)        window_sopa.FindElement(evento).Update(background_color='white')      elif values["rad_sust"]:        progreso[evento]=data["colores"]["Sustantivos"]        window_sopa.FindElement(evento).Update(background_color=data["colores"]["Sustantivos"])      elif values["rad_verb"]:        progreso[evento]=data["colores"]["Verbos"]        window_sopa.FindElement(evento).Update(background_color=data["colores"]["Verbos"])      elif values["rad_adj"]:        progreso[evento]=data["colores"]["Adjetivos"]          window_sopa.FindElement(evento).Update(background_color=data["colores"]["Adjetivos"])     except:      break          window_sopa.Close()#-----------------------------------------------------------------------------------------------